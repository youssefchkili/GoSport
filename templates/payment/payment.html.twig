{% extends 'coolbase.html.twig' %}

{% block body %}
    <div class="max-w-6xl mx-auto p-4 font-sans">
        <h1 class="text-2xl font-bold mb-8">Stripe Payment</h1>

        <div class="flex flex-col md:flex-row gap-8">
            <!-- Visualisation de la carte -->
            <div class="w-full md:w-1/2 mb-6">
                <div class="bg-gradient-to-r from-gray-800 to-gray-900 rounded-xl p-6 shadow-lg transform transition-all duration-300 hover:shadow-xl hover:-translate-y-1 text-gray-100 relative overflow-hidden border border-opacity-20" style="border-color: var(--primary-color)">
                    <!-- Cercles de puce -->
                    <div class="absolute top-0 right-0 w-16 h-16 rounded-full opacity-20 -mr-6 -mt-6" style="background-color: var(--primary-color)"></div>
                    <div class="absolute bottom-0 left-0 w-16 h-16 rounded-full opacity-20 -ml-6 -mb-6" style="background-color: var(--primary-color)"></div>

                    <!-- Logo de la carte -->
                    <div class="flex justify-between items-start mb-8">
                        <div class="text-xl font-bold tracking-wider">CARD PAYMENT</div>
                        <div class="text-right">
                            <svg class="h-10 w-10 text-gray-100" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5">
                                <path d="M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12s4.477 10 10 10 10-4.477 10-10z"></path>
                                <path d="M14.5 9a3.5 3.5 0 100 6 3.5 3.5 0 000-6z"></path>
                                <path d="M8 12h5"></path>
                            </svg>
                        </div>
                    </div>

                    <!-- Numéro de carte factice -->
                    <div class="text-lg tracking-widest mb-6 font-mono">•••• •••• •••• ••••</div>

                    <!-- Informations du titulaire -->
                    <div class="flex justify-between items-center">
                        <div>
                            <div class="text-xs opacity-75 mb-1">CardHolder</div>
                            <div class="font-medium truncate">Card Holder's Name</div>
                        </div>
                        <div>
                            <div class="text-xs opacity-75 mb-1">EXPIRE</div>
                            <div class="font-medium">12/34</div>
                        </div>
                    </div>

                    <!-- Puce de la carte -->
                    <div class="absolute top-20 left-6">
                        <div class="w-10 h-7 rounded-md opacity-80" style="background-color: var(--primary-color)"></div>
                    </div>
                </div>

                <!-- Conseils de sécurité -->
                <div class="mt-4 bg-gray-800 p-3 rounded-md text-sm text-gray-300 border-l-4" style="border-color: var(--primary-color)">
                    <p class="font-medium">Secure Payment</p>
                    <p>Your payment informations are crypted and secure.</p>
                </div>
            </div>

            <!-- Formulaire de paiement -->
            <div class="w-full md:w-1/2">
                <form id="payment-form" class="bg-gray-800 rounded-lg shadow-md p-6 border border-gray-700">
                    <h2 class="text-xl font-semibold mb-6 text-gray-200">Payment Details</h2>

                    <label for="card-element" class="block text-sm font-medium text-gray-300 mb-2">Card Informations</label>
                    <div id="card-element" class="border border-gray-600 p-4 rounded-md bg-gray-700 shadow-sm focus-within:ring-2 transition-all duration-200" style="--tw-ring-color: var(--primary-color)"></div>

                    <!-- Message d'erreur -->
                    <div id="card-errors" class="mt-2 text-sm text-red-400 font-medium" role="alert"></div>

                    <button id="submit-button" class="w-full mt-6 text-gray-100 font-medium py-3 px-4 rounded-md transition duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 flex items-center justify-center" style="background-color: var(--primary-color); --tw-ring-color: var(--primary-color)">
                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                        </svg>
                        Pay
                    </button>

                    <!-- Badges de confiance -->
                    <div class="flex items-center justify-center mt-6 space-x-4 text-gray-400">
                        <svg class="h-6 w-6" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                        </svg>
                        <span class="text-xs font-medium">Secure Connexion</span>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script src="https://js.stripe.com/v3/"></script>
    <script>
        // Étape 1 : Initialisation de Stripe avec la clé publique
        const stripe = Stripe("pk_test_oKhSR5nslBRnBZpjO6KuzZeX"); // Remplacez par votre propre clé publique
        const elements = stripe.elements();

        // Personnalisation du style des éléments Stripe pour mode nuit
        const style = {
            base: {
                fontSize: '16px',
                color: '#E5E7EB', // Couleur texte claire pour mode nuit
                fontFamily: '"Inter", -apple-system, BlinkMacSystemFont, sans-serif',
                '::placeholder': {
                    color: '#9CA3AF',
                },
                backgroundColor: '#374151',
            },
            invalid: {
                color: '#F87171',
                iconColor: '#F87171',
            },
        };

        const cardElement = elements.create('card', {style: style});
        cardElement.mount('#card-element'); // Insère l'input Stripe sur la page

        const form = document.getElementById('payment-form');
        const submitButton = document.getElementById('submit-button');
        const primaryColor = getComputedStyle(document.documentElement).getPropertyValue('--primary-color');

        // Ajout d'un écouteur pour mettre à jour visuellement l'état du bouton
        form.addEventListener('submit', async (event) => {
            event.preventDefault();

            // Désactive le bouton et montre un indicateur de chargement
            submitButton.disabled = true;
            submitButton.innerHTML = `
                <svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-gray-100" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                    <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
                Loading...
            `;

            // Étape 2 : Appelez votre backend pour obtenir un clientSecret
            const response = await fetch('/payment/create-intent', { method: 'POST' });
            const data = await response.json();

            if (!data.clientSecret) {
                document.getElementById('card-errors').textContent = 'Erreur : Impossible de créer un PaymentIntent.';

                // Réinitialise le bouton
                submitButton.disabled = false;
                submitButton.innerHTML = `
                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                    </svg>
                    Pay
                `;
                return;
            }

            const clientSecret = data.clientSecret;

            // Étape 3 : Soumettez le paiement au backend via Stripe
            const { error } = await stripe.confirmCardPayment(clientSecret, {
                payment_method: {
                    card: cardElement,
                },
            });

            if (error) {
                // Affiche les erreurs si le paiement échoue
                document.getElementById('card-errors').textContent = error.message;

                // Réinitialise le bouton
                submitButton.disabled = false;
                submitButton.innerHTML = `
                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                    </svg>
                    Pay
                `;
            } else {
                // Redirection en cas de succès
                window.location.href = "/payment/success";
            }
        });

        // Afficher les erreurs en temps réel lors de la saisie
        cardElement.addEventListener('change', ({error}) => {
            const displayError = document.getElementById('card-errors');
            if (error) {
                displayError.textContent = error.message;
            } else {
                displayError.textContent = '';
            }
        });
    </script>
{% endblock %}